networks:
  dev:

services:
  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - './nginx.conf:/etc/nginx/nginx.conf'
    depends_on:
      - backend
      - frontend
    networks:
      - dev
    dns:
      - 8.8.8.8
      - 8.8.4.4
    

  backend:
    build:
      context: ./Backend
    depends_on:
      - postgres
    networks:
      - dev
    dns:
      - 8.8.8.8
      - 8.8.4.4

  frontend:
    build:
      context: ./Frontend
    networks:
      - dev
    dns:
      - 8.8.8.8
      - 8.8.4.4

  postgres:
    image: postgres:latest
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_USER}" ]
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA= /var/lib/postgresql/data
    networks:
      - dev
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

volumes:
  pg_data:
    driver: local